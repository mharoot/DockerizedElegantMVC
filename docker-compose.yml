version: '3'

services:
    nginx:
        image: nginx:latest
        container_name: nginx
        ports:
            - "80:80"
        volumes:
            - ./code:/code
            - ./services/nginx/conf/site.conf:/etc/nginx/conf.d/default.conf
        networks:
            - code-network
        working_dir: /code
        links:
            - redis:redisfrontend

##### using the same php-fpm image for all API services ./services/php ########
    user:
        build: ./services/php 
        volumes:
            - ./services/user:/services/user
        working_dir: /services/user
        networks:
            - user-network
        links:
            - redis:redisfrontend
            - userdb

    customer:
        build: ./services/php 
        volumes:
            - ./services/customer:/services/customer
        working_dir: /services/customer
        networks:
            - customer-network
        links:
            - redis:redisfrontend
            - customerdb

    employee:
        build: ./services/php 
        volumes:
            - ./services/employee:/services/employee
        working_dir: /services/employee
        networks:
            - employee-network
        links:
            - redis:redisfrontend
            - employeedb
    
    supplier:
        build: ./services/php
        volumes:
            - ./services/supplier:/services/supplier
        working_dir: /services/supplier
        networks:
            - supplier-network
        links:
            - redis:redisfrontend
            - supplierdb
    
    product:
        build: ./services/php 
        volumes:
            - ./services/product:/services/product
        working_dir: /services/product
        networks:
            - product-network
        links:
            - redis:redisfrontend
            - productdb
    
    
############## REDIS SERVICE ###################
    redis:
        build: ./services/redis
        container_name: redisfrontend
        networks:
            - user-network
            - customer-network
            - employee-network
            - suppler-network
            - product-network
 


############## DATABASE SERVICES ###################
    userdb:
      build: ./services/user/mysql
      restart: always
      container_name: userdb
      environment:
        MYSQL_ROOT_PASSWORD: password
        MYSQL_USER: root
        MYSQL_DATABASE: emvc 
      volumes: 
        - userdata:/var/lib/mysql
      networks:
        - user-network

    customerdb:
      build: ./services/customer/mysql
      restart: always
      container_name: customerdb
      environment: 
        MYSQL_ROOT_PASSWORD: password
        MYSQL_USER: root
        MYSQL_DATABASE: emvc 
      volumes: 
        - userdata:/var/lib/mysql
      networks:
        - user-network

    employeedb:
      build: ./services/employee/mysql
      restart: always
      container_name: employeedb
      environment: 
        MYSQL_ROOT_PASSWORD: password
        MYSQL_USER: root
        MYSQL_DATABASE: emvc 
      volumes: 
        - employeedata:/var/lib/mysql
      networks:
        - employee-network

    supplierdb:
      build: ./services/supplier/mysql
      restart: always
      container_name: supplierdb
      environment: 
        MYSQL_ROOT_PASSWORD: password
        MYSQL_USER: root
        MYSQL_DATABASE: emvc 
      volumes: 
        - userdata:/var/lib/mysql
      networks:
        - supplier-network

    productdb:
      build: ./services/product/mysql
      restart: always
      container_name: productdb
      environment: 
        MYSQL_ROOT_PASSWORD: password
        MYSQL_USER: root
        MYSQL_DATABASE: emvc 
      volumes: 
        - productdata:/var/lib/mysql
      networks:
        - product-network


networks:
    user-network:
        driver: bridge
    customer-network:
        driver: bridge
    employee-network:
        driver: bridge
    supplier-network:
        driver: bridge
    product-network:
        driver: bridge

volumes:
    userdata:
    customerdata:
    employeedata:
    supplierdata:
    productdata:
